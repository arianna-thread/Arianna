package fr.eurecom.mobserv.arianna;

import java.util.List;

import android.app.Activity;
import android.app.ListActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import fr.eurecom.mobserv.arianna.model.Event;
import fr.eurecom.mobserv.arianna.model.Model;
import fr.eurecom.mobserv.arianna.model.PointOfInterest;

// TODO Use a Loader in order to query the db in a different thread
//	than the main UI's one.
public class PointOfInterestList extends ListActivity {

	// TODO Try with a cursor????
	public static class PointOfInterestArrayAdapter extends ArrayAdapter<PointOfInterest> {
		private final List<PointOfInterest> list;
		private final LayoutInflater inflater;

		public PointOfInterestArrayAdapter(Activity context, List<PointOfInterest> list) {
			super(context, R.layout.point_of_interest_list_row_layout, list);
			this.list = list;
			this.inflater=LayoutInflater.from(context);
		}

		static class ViewHolder {
			TextView pointOfInterestName;
		}

		/**
		 * Make a view to hold each row.
		 *
		 * @see android.widget.ListAdapter#getView(int, android.view.View,
		 *      android.view.ViewGroup)
		 */
		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			// A ViewHolder keeps references to children views to avoid unneccessary calls
			// to findViewById() on each row.
			ViewHolder holder;

			// When convertView is not null, we can reuse it directly, there is no need
			// to reinflate it. We only inflate a new View when the convertView supplied
			// by ListView is null.
			if (convertView == null) {

				convertView = inflater.inflate(R.layout.point_of_interest_list_row_layout, null);

				// Creates a ViewHolder and store references to the two children views
				// we want to bind data to.
				holder = new ViewHolder();
				holder.pointOfInterestName = (TextView) convertView.findViewById(R.id.point_of_interest_name);
				convertView.setTag(holder);
			} else {
				// Get the ViewHolder back to get fast access to the TextView
				// and the ImageView.
				holder = (ViewHolder) convertView.getTag();
			}

			// Bind the data efficiently with the holder.
			holder.pointOfInterestName.setText(list.get(position).getTitle());

			return convertView;
		}
	}

	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Event event=(Event) Model.getByURI(Event.class, "E0", getApplicationContext()); 
		/*
		List<PointOfInterest> pois =new ArrayList<PointOfInterest>(event.getPointsOfInterest().values());
		ArrayAdapter<PointOfInterest> adapter = new PointOfInterestArrayAdapter(this, pois);
		setListAdapter(adapter);
		*/
	}
	
	
	// TODO Implement the startActivity 
	@Override
	protected void onListItemClick(ListView l, View v, int position, long id) {
		PointOfInterest item = (PointOfInterest) getListAdapter().getItem(position);
		// TODO DEBUG
		Toast.makeText(this, item.getTitle() + " selected", Toast.LENGTH_LONG).show();
		/*
		Intent intent = new Intent(this, PathDetail.class);
		intent.putExtra(Dashboard.EXTRA_URI, item.getUri());
		*/
	}
	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		//getMenuInflater().inflate(R.menu.activity_point_of_interest_list, menu);
		return true;
	}

}