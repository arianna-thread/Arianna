package fr.eurecom.mobserv.arianna;

import java.io.IOException;
import java.io.InputStream;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;

import fr.eurecom.mobserv.arianna.PathList.PathArrayAdapter;
import fr.eurecom.mobserv.arianna.PointOfInterestList.PointOfInterestArrayAdapter;
import fr.eurecom.mobserv.arianna.model.Event;
import fr.eurecom.mobserv.arianna.model.Model;
import fr.eurecom.mobserv.arianna.model.Path;
import fr.eurecom.mobserv.arianna.model.PointOfInterest;

import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.view.Menu;
import android.view.View;
import android.view.ViewConfiguration;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class PathDetail extends BaseDrawerActivity {
	private Context ctx;
	private ApplicationState state;
	private String uri;
	private Path path;
	private PointOfInterest poi;
	private List<PointOfInterest> poisInPath;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_path_detail);
		getOverflowMenu();
		
		//retrieve the intent which started the activity
		Intent startIntent = getIntent();
		uri = startIntent.getStringExtra(DashboardActivity.EXTRA_URI); 
		ctx = getApplicationContext();
		path = (Path) Model.getByURI(Path.class, uri, ctx);
		
		//title of path
		TextView title = (TextView) findViewById(R.id.textTitlePath);
		title.setText(path.getTitle());
		
		//image of path
		ImageView image = (ImageView) findViewById(R.id.imagePath);
		
		InputStream bitmap=null;
		try {
		    bitmap=getAssets().open("labirinto.png");
		    Bitmap bit=BitmapFactory.decodeStream(bitmap);
		    image.setImageBitmap(bit);
		} catch (IOException e) {
		    e.printStackTrace();
		} finally {
		    try {
				bitmap.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		//description of path
		TextView desc = (TextView) findViewById(R.id.textPathDescription);
		desc.setText(path.getDescription());
		
		//list view poi
		ListView listView = (ListView) findViewById(R.id.point_of_interest_list_view);
		List<PointOfInterest> pois = path.getPOIs();
		ArrayAdapter<PointOfInterest> adapter = new PointOfInterestArrayAdapter(this, pois);
		listView.setAdapter(adapter);
		listView.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				// TODO Implement the startActivity 
				PointOfInterest item = (PointOfInterest) parent.getAdapter().getItem(position);
				Intent intentDetail = new Intent(getApplicationContext(), PointOfInterestDetail.class);
				intentDetail.putExtra(DashboardActivity.EXTRA_URI, item.getUri());
				startActivity(intentDetail);
				// TODO DEBUG
				Toast.makeText(getApplicationContext(), item.getTitle() + " selected", Toast.LENGTH_LONG).show();
				
				//Intent intent = new Intent(this, PathDetail.class);
				//intent.putExtra(Dashboard.EXTRA_URI, item.getUri());
				
			}
		});
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_path_detail, menu);
		return true;
	}

	@Override
	protected int getContentViewResource() {
		// TODO Auto-generated method stub
		return R.layout.activity_path_detail;
	}
	
	public void getOverflowMenu() {

	     try {
	        ViewConfiguration config = ViewConfiguration.get(this);
	        Field menuKeyField = ViewConfiguration.class.getDeclaredField("sHasPermanentMenuKey");
	        if(menuKeyField != null) {
	            menuKeyField.setAccessible(true);
	            menuKeyField.setBoolean(config, false);
	        }
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	}
}
