package fr.eurecom.mobserv.arianna.model;

import java.util.Map;

import android.content.ContentValues;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.provider.BaseColumns;

public class PointOfInterest extends Model implements BaseColumns {
	public final static String TABLE_NAME = "point_of_interest";
	public final static String COLUMN_NAME_TITLE = "title";
	public final static String COLUMN_NAME_SUBTITLE = "subtitle";
	public final static String COLUMN_NAME_DESCRIPTION = "description";
	public final static String COLUMN_NAME_IMAGE = "image";
	
	public final static String SQL_CREATE_TABLE = 
			"CREATE TABLE " + TABLE_NAME + " (" +
				    _ID + PRIMARY_KEY +
				    COLUMN_NAME_URI + TEXT_TYPE + UNIQUE + COMMA_SEP +
				    COLUMN_NAME_TITLE + TEXT_TYPE + COMMA_SEP +
				    COLUMN_NAME_SUBTITLE + TEXT_TYPE + COMMA_SEP +
				    COLUMN_NAME_DESCRIPTION + TEXT_TYPE + COMMA_SEP +
				    COLUMN_NAME_IMAGE + TEXT_TYPE + COMMA_SEP +" )";
				    

	private String title;
	private String subtitle;
	private String description;
	private String image;
	/**
	 * @return the image
	 */
	public String getImage() {
		return image;
	}


	/**
	 * @param image the image to set
	 */
	public void setImage(String image) {
		this.image = image;
	}


	//TODO oggetto immagine, controllare tutti i metodi  ?
	private Map<String,String> properties;
	



	/**
	 * @param context
	 * @param uri
	 * @param title
	 * @param subtitle
	 * @param description
	 * @param properties
	 */
	public PointOfInterest(Context context, String uri, String title,
			String subtitle, String description, Map<String, String> properties) {
		super(context, uri);
		this.title = title;
		this.subtitle = subtitle;
		this.description = description;
		this.properties = properties;
	}


	/**
	 * @return the title
	 */
	public String getTitle() {
		return title;
	}


	/**
	 * @param title the title to set
	 */
	public void setTitle(String title) {
		this.title = title;
	}


	/**
	 * @return the subtitle
	 */
	public String getSubtitle() {
		return subtitle;
	}


	/**
	 * @param subtitle the subtitle to set
	 */
	public void setSubtitle(String subtitle) {
		this.subtitle = subtitle;
	}


	/**
	 * @return the description
	 */
	public String getDescription() {
		return description;
	}


	/**
	 * @param description the description to set
	 */
	public void setDescription(String description) {
		this.description = description;
	}


	/**
	 * @return the properties
	 */
	public Map<String, String> getProperties() {
		return properties;
	}


	/**
	 * @param properties the properties to set
	 */
	public void setProperties(Map<String, String> properties) {
		this.properties = properties;
	}


	@Override
	public boolean save() {
SQLiteDatabase db = DbHelper.getInstance(this.getContext()).getWritableDatabase();
		
		// Create a new map of values, where column names are the keys
		ContentValues values = new ContentValues();
		values.put(Model.COLUMN_NAME_URI,this.getUri());
		values.put(COLUMN_NAME_TITLE,this.getTitle());
		values.put(COLUMN_NAME_SUBTITLE,this.getSubtitle());
		values.put(COLUMN_NAME_DESCRIPTION,this.getDescription());
		values.put(COLUMN_NAME_IMAGE,this.getDescription());

		// Insert the new row, returning the primary key value of the new row
		long newRowId;
		newRowId = db.insert(
		         Path.TABLE_NAME,
		         null,
		         values);
		return newRowId>=0;
	}
	

	@Override
	protected String getTableName() {	
		return TABLE_NAME;
	}
	
	
	
	
}
