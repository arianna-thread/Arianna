package fr.eurecom.mobserv.arianna;

import java.io.IOException;
import java.io.InputStream;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;

import com.devsmart.android.ui.HorizontalListView;
import com.slidingmenu.lib.SlidingMenu;

import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import fr.eurecom.mobserv.arianna.model.Model;
import fr.eurecom.mobserv.arianna.model.Path;
import fr.eurecom.mobserv.arianna.model.PointOfInterest;

public class PathDetail extends BaseDrawerActivity {
	private Context ctx;
	private ApplicationState state;
	private String uri;
	private Path path;
	private List<PointOfInterest> poisInPath;
	
	private ArrayList<String> imageSrc = new ArrayList<String>();
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_path_detail);
		getOverflowMenu();
		ctx = getApplicationContext();
		
		//retrieve the intent which started the activity
		Intent startIntent = getIntent();
		
		// Error during activity start-up, back to dashboard
		if (startIntent == null) {
			Toast.makeText(ctx, R.string.no_intent, Toast.LENGTH_LONG).show();
			// Asynchronous, so statements order doesn't matter
			startActivity(new Intent(getApplicationContext(), DashboardActivity.class));
			finish();
		}

		// Error during activity start-up, back to dashboard
		if (!startIntent.hasExtra(DashboardActivity.EXTRA_URI)) {
			Toast.makeText(ctx, R.string.intent_no_uri, Toast.LENGTH_LONG).show();
			// Asynchronous, so statements order doesn't matter
			startActivity(new Intent(getApplicationContext(), DashboardActivity.class));
			finish();
		}
		
		uri = startIntent.getStringExtra(DashboardActivity.EXTRA_URI); 
		path = (Path) Model.getByURI(Path.class, uri, ctx);
		
		//title of path
		TextView title = (TextView) findViewById(R.id.path_detail_title);
		title.setText(path.getTitle());
		
		//images of path in a horizontal view
		HorizontalListView listview = (HorizontalListView) findViewById(R.id.listview);
		listview.setAdapter(mAdapter);
		
		//description of path
		TextView desc = (TextView) findViewById(R.id.path_detail_desc);
		desc.setText(path.getDescription());
		
		//list view POIs
		ListView listView = (ListView) findViewById(R.id.path_detail_poi_list_view);
		poisInPath = path.getPOIs();
		for (PointOfInterest poi : poisInPath) {
			//TODO
			imageSrc.add(poi.getImage());
			//imageSrc.add("curr.png");
		}
		ArrayAdapter<PointOfInterest> adapter = new PointOfInterestArrayAdapter(this, poisInPath);
		listView.setAdapter(adapter);
		listView.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				PointOfInterest item = (PointOfInterest) parent.getAdapter().getItem(position);
				Intent intentDetail = new Intent(getApplicationContext(), PointOfInterestDetail.class);
				intentDetail.putExtra(DashboardActivity.EXTRA_URI, item.getUri());
				intentDetail.putExtra(DashboardActivity.EXTRA_LAUNCHER, DashboardActivity.LAUNCHER_PATH_DETAIL);
				intentDetail.putExtra(DashboardActivity.EXTRA_PATH, path.getUri());
				startActivity(intentDetail);
				// TODO DEBUG
				Toast.makeText(getApplicationContext(), item.getTitle() + " selected", Toast.LENGTH_LONG).show();
				
			}
		});
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_path_detail, menu);
		return true;
	}

	@Override
	protected int getContentViewResource() {
		// TODO Auto-generated method stub
		return R.layout.activity_path_detail;
	}
	
	@Override
	protected int getTouchModeAbove() {
		return SlidingMenu.TOUCHMODE_NONE;
	}
	
	
	// method to retrieve elements of action bar in overflow in order to put in overflow icon 
	public void getOverflowMenu() {

	     try {
	        ViewConfiguration config = ViewConfiguration.get(this);
	        Field menuKeyField = ViewConfiguration.class.getDeclaredField("sHasPermanentMenuKey");
	        if(menuKeyField != null) {
	            menuKeyField.setAccessible(true);
	            menuKeyField.setBoolean(config, false);
	        }
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	}
	
	// adapter for horizontal list view
	private BaseAdapter mAdapter = new BaseAdapter() {
		
		private OnClickListener mOnButtonClicked = new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				AlertDialog.Builder builder = new AlertDialog.Builder(PathDetail.this);
				builder.setMessage("hello from " + v);
				builder.setPositiveButton("Cool", null);
				builder.show();
				
			}
		};

		@Override
		public int getCount() {
			return imageSrc.size();
		}

		@Override
		public Object getItem(int position) {
			return null;
		}

		@Override
		public long getItemId(int position) {
			return 0;
		}
		//Single view in the horizontal list view
		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View retval = LayoutInflater.from(parent.getContext()).inflate(R.layout.viewitem, null);
			ImageView image= (ImageView) retval.findViewById(R.id.image);
			InputStream bitmap=null;
			try {
			    bitmap=getAssets().open(imageSrc.get(position));
			    Bitmap bit=BitmapFactory.decodeStream(bitmap);
			    image.setImageBitmap(bit);
			} catch (IOException e) {
			    e.printStackTrace();
			} finally {
			    try {
					bitmap.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			return retval;
		}
	};
}
